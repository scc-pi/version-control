[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Version Control for Data Analysis",
    "section": "",
    "text": "Preface\nThis documentation is at an early stage of development.\nThis document includes good practice for using version control for data analysis at Sheffield City Council. In particular, it provides suggestions and requirements on how the data being analysed is handled by version control.\nIn addition to good practice, the guidance will also provide some pointers on getting started and links to other resources.\nIf you’re reading this from the PDF version you can view the online version here:\nscc-pi.github.io/version-control.\nIf you’re reading this from the online version you can view the PDF version via the small Adobe Acrobat icon next to the title in index pane on the left, or by using this URL:\nscc-pi.github.io/version-control/Version-Control-for-Data-Analysis.pdf.\nHow this guidance is published is detailed in the repository README.md:\ngithub.com/scc-pi/version-control#readme\nThe expectation is that this book, its repository, along with most repositories in scc-pi GitHub organisation, will move to Azure DevOps within the Council’s secure Azure Tenant. Establishing the Council Azure DevOps for data analysis is currently on hold whilst a new data platform is established."
  },
  {
    "objectID": "intro.html#council-setup",
    "href": "intro.html#council-setup",
    "title": "1  Introduction",
    "section": "1.1 Council setup",
    "text": "1.1 Council setup\nThe intention is for Azure DevOps to be our default for hosting version control repositories. This will enable us to securely share code with data analysts across the Council. Our adoption of Azure DevOps is on hold whilst a new data platform is established.\n\n\n\n\n\n\n\n\nThe diagram on the left is an illustration of the Council’s planned version control setup once both the Data Platform and Azure DevOps are established. It is based on the NHS Digital setup, but they use GitLab in place of Azure DevOps:\nHow to publish your code in the open - RAP Community of Practice (nhsdigital.github.io)\n\n\nMaking code open and transparent to everyone, not just other Council Officers, is considered best practice. The Government’s Digital Service Standard 12th principle states that all publicly funded code should be open, reusable, and available under appropriate licences. The main benefits of publishing your code are increased transparency, collaboration and knowledge sharing across local authorities, external users, and analysts. Knowing that code will be published will lead to overall code health increasing as analysts will take greater care in ensuring that best coding practices and standards are applied.\nMaking a repository publicly available will be done by publishing it on GitHub, but only if it passes a fit for publishing checklist.\nTo understand both the benefits of sharing code and how to manage the risks, we’ll be leaning heavily on resources from:\nNHS RAP Community of Practice Government Analysis Function Guidance Hub"
  },
  {
    "objectID": "intro.html#todo",
    "href": "intro.html#todo",
    "title": "1  Introduction",
    "section": "1.2 ToDo",
    "text": "1.2 ToDo\n\nSome form of “Getting Started”, so subsequent content makes sense. Links to other resources and training?\n\nOnce this guidance is moved to Azure DevOps, include Show & Tell URL.\n\nRe-write chapter when Azure DevOps available."
  },
  {
    "objectID": "data-protection.html#confidentiality-risk",
    "href": "data-protection.html#confidentiality-risk",
    "title": "2  Data protection",
    "section": "2.1 Confidentiality risk",
    "text": "2.1 Confidentiality risk\nThe principal data protection risk is confidentiality. Confidentiality is defined as unauthorised disclosure of, or access to, personal data.\nVersion control for data analysis has three types of confidentiality risk. These relate to what a data analyst may inadvertently include in a public version control repository:\n\nData file (e.g. a spreadsheet) with personal data.\n\nSome personal data in data analysis output or a script.\n\nSecret (e.g. a password) in a script that compromises the security of, for example, a database containing personal data.\n\nThese risks are less relevant for SQL scripts than for R and Python scripts, and SQL scripts are more likely for new Council users of version control.\nOur Azure DevOps repositories will not be public. Only our GitHub repositories will be public, so the GitHub repositories are the main risk."
  },
  {
    "objectID": "data-protection.html#information-management-notes",
    "href": "data-protection.html#information-management-notes",
    "title": "2  Data protection",
    "section": "2.2 Information Management notes",
    "text": "2.2 Information Management notes\nOnce we move to Azure DevOps we may take advantage of the project management tools. However, for now we’ll keep track of actions on this page.\nPreliminary discussions with the Council’s Information Management team have been held. Below are notes of (italicised) questions raised and (bulleted) actions agreed.\n1. Are there retention schedules for scripts (and their versions)?\nNo. Current housekeeping is to periodically (maybe every 6 month) review the list of GitHub repos (repositories) and archive what’s no longer in use.\n\nFormalise and document proposed housekeeping, including retention schedules.\n\nExtend periodic reviews of repos to include what should be archived, and what should be deleted from the archive.\n\n2. When you publish your data analyses do you indicate anything about the script, its version and a plain English statement?\nEach repository includes, as a minimum, a README.md file with a plain English statement. It will also often include further documentation about the data analysis pipeline. The current version and previous versions are an intrinsic aspect of GitHub and Azure DevOps.\n\nInclude the README.md and documentation requirements in the version control housekeeping documentation.\n\n3. When you publish to GitHub (in future) is it checked? attributed to SCC? and come with a disclaimer?\n\nUnit tests and code reviews are RAP (Reproducible Analytical Pipeline) practices that we’re considering adopting.\n\nOur GitHub repos are held under the scc-pi GitHub organisation and are clearly attributable to SCC.\n\nNeed to consider the different licenses that can be applied to published repos and whether this would cover the disclaimer.\n\nMain action from meeting Information Management:\n\nComplete mini 2-page DPIA and make MW aware. It might sit under the full DPIA of the new Data Platform.\n\nOther actions:\n\nMove GitHub repos to Azure DevOps.\n\nDraft a fit-to-publish (publically on GitHub) checklist.\n\npre-commit checks (scripts) or “hooks” that screen for CSVs, PID, {secrets} (e.g. passwords) etc.\n\nCode review by another analyst will also lessen the risk of inadvertently including data.\n\nPublish guidance and tools for annonymising datasets for data analysis to encourage working with PID as only by exception.\n\nProtocols in case of a data breach from incorrect use of version control."
  },
  {
    "objectID": "data-protection.html#other-todos",
    "href": "data-protection.html#other-todos",
    "title": "2  Data protection",
    "section": "2.3 Other ToDos",
    "text": "2.3 Other ToDos\n\nReplace readme with quarto doc and outline quarto book and github actions??\nMove version control content from pinsheff.\n\nLink to related unmoved pinsheff content.\nNote Version Control Show & Tell e.g. .gitignore /data."
  },
  {
    "objectID": "data-protection.html#todo",
    "href": "data-protection.html#todo",
    "title": "2  Data protection",
    "section": "2.4 ToDo",
    "text": "2.4 ToDo\n\nWhat are the connotations of personal data being available to someone in the Council who doesn’t need access to it? For example, via Azure DevOps?\n\nOnce this guidance is moved to Azure DevOps, include mini-DPIA PDF download URL."
  },
  {
    "objectID": "training.html#todo",
    "href": "training.html#todo",
    "title": "3  Training",
    "section": "3.1 ToDo",
    "text": "3.1 ToDo"
  },
  {
    "objectID": "code-reviews.html#todo",
    "href": "code-reviews.html#todo",
    "title": "4  Code reviews",
    "section": "4.1 ToDo",
    "text": "4.1 ToDo"
  },
  {
    "objectID": "anonymise.html#todo",
    "href": "anonymise.html#todo",
    "title": "5  Anonymise",
    "section": "5.1 ToDo",
    "text": "5.1 ToDo"
  },
  {
    "objectID": "gitignore.html#todo",
    "href": "gitignore.html#todo",
    "title": "6  .gitignore",
    "section": "6.1 ToDo",
    "text": "6.1 ToDo"
  },
  {
    "objectID": "repo-template.html#todo",
    "href": "repo-template.html#todo",
    "title": "7  Repository template",
    "section": "7.1 ToDo",
    "text": "7.1 ToDo\n\nConsider excluding initial data exploration and data engineering aspects from publishing."
  },
  {
    "objectID": "git-hooks.html#todo",
    "href": "git-hooks.html#todo",
    "title": "8  Git hooks",
    "section": "8.1 ToDo",
    "text": "8.1 ToDo"
  },
  {
    "objectID": "secrets.html#todo",
    "href": "secrets.html#todo",
    "title": "9  Secrets",
    "section": "9.1 ToDo",
    "text": "9.1 ToDo"
  },
  {
    "objectID": "publish-check.html#todo",
    "href": "publish-check.html#todo",
    "title": "10  Fit for publishing checklist",
    "section": "10.1 ToDo",
    "text": "10.1 ToDo"
  },
  {
    "objectID": "github-roles.html#todo",
    "href": "github-roles.html#todo",
    "title": "11  GitHub roles",
    "section": "11.1 ToDo",
    "text": "11.1 ToDo\n\nhttps://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/roles-in-an-organization\n\nhttps://docs.github.com/en/code-security/getting-started/best-practices-for-preventing-data-leaks-in-your-organization\n\nRetention schedules for repositories."
  },
  {
    "objectID": "breach-protocol.html#todo",
    "href": "breach-protocol.html#todo",
    "title": "12  Breach protocol",
    "section": "12.1 ToDo",
    "text": "12.1 ToDo"
  }
]